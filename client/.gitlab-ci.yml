stages:
  - build
  - docker-build
  - deploy

variables:
  DOCKER_IMAGE: hiepnguyenduc2005/client
  DOCKER_TAG: $CI_COMMIT_SHA
  LATEST_TAG: latest

before_script:
  - apk add --no-cache openssh
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - eval $(ssh-agent -s)
  - ssh-add ~/.ssh/id_rsa
  - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

build:
  stage: build
  image: node:18-alpine
  script:
    - rm -rf node_modules package-lock.json
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/

docker_build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG -t $DOCKER_IMAGE:$LATEST_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:$LATEST_TAG
  needs:
    - build

deploy:
  stage: deploy
  image: docker:stable
  script:
    - ssh root@$SSH_HOST << 'EOF'
    - docker compose down
    - docker image rm hiepnguyenduc2005/client
    - docker compose pull
    - docker compose up -d
    - EOF
  only:
    - master

